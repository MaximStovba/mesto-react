{"version":3,"sources":["components/Header.js","components/Card.js","utils/Api.js","components/Main.js","components/PopupWithForm.js","components/InputAvatarForm.js","components/InputAddForm.js","components/InputEditForm.js","components/ImagePopup.js","components/Footer.js","components/App.js","serviceWorker.js","index.js","images/header__logo.svg"],"names":["Header","className","src","logo","alt","Card","card","onCardClick","link","name","onClick","likes","type","aria-label","api","baseUrl","headers","this","_baseUrl","_headers","fetch","authorization","then","res","ok","json","Promise","reject","status","formData","method","body","JSON","stringify","about","place","url","cardId","avatarUrl","avatar","Main","onEditAvatar","onEditProfile","onAddPlace","React","useState","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","useEffect","all","getUserInfo","getInitialCards","userInfo","allCards","map","item","id","_id","length","catch","err","console","log","key","PopupWithForm","title","children","btnText","isOpen","onClose","action","noValidate","InputAvatarForm","placeholder","required","pattern","InputAddForm","minLength","maxLength","InputEditForm","ImagePopup","cardOpen","cardData","Footer","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","setCardData","closeAllPopups","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.efe4b0d9.chunk.js","sourcesContent":["// Header.js\n\nimport React from 'react';\nimport logo from '../images/header__logo.svg';\n\nfunction Header() {\n  return (\n    <header className=\"header\">\n      <img src={logo} alt=\"Логотип\" className=\"header__logo\" />\n    </header>\n  );\n}\n\nexport default Header;\n","// Card.js\n\nimport React from 'react';\n\nfunction Card({ card, onCardClick }) {\n\n  function handleClick() {\n    onCardClick(card);\n  }\n\n  return (\n    <div className=\"card\">\n      <img className=\"card__image\" src={card.link} alt={card.name} onClick={handleClick} />\n      <h2 className=\"card__title\">{card.name}</h2>\n      <p className=\"card__num-like\">{card.likes}</p>\n      <button type=\"submit\" className=\"card__like\" aria-label=\"Лайкнуть\"></button>\n      <button type=\"submit\" className=\"card__trash\" aria-label=\"Удалить\"></button>\n    </div>\n  );\n}\n\nexport default Card;\n","// Api.js\n\nclass Api {\n  constructor({ baseUrl, headers }) {\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n\n  // публичный метод загрузки профиля пользователя с сервера v2\n  getUserInfo() {\n    return fetch(this._baseUrl + '/users/me', {\n      headers: {\n        authorization: this._headers\n      }\n    })\n    .then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Что-то пошло не так: ${res.status}`);\n    });\n  }\n\n  // публичный метод загрузки карточек с сервера v2\n  getInitialCards() {\n    return fetch(this._baseUrl + '/cards', {\n      headers: {\n        authorization: this._headers\n      }\n    })\n    .then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Что-то пошло не так: ${res.status}`);\n    });\n  }\n\n  // публичный метод загрузки новых данных пользователя на сервер v2\n  patchUserInfo(formData) {\n    return fetch(this._baseUrl + '/users/me', {\n      method: 'PATCH',\n      headers: {\n        authorization: this._headers,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: formData.name,\n        about: formData.about\n      })\n    })\n    .then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Что-то пошло не так: ${res.status}`);\n    });\n  }\n\n  // публичный метод добавления новой карточки v2\n  postNewCard(formData) {\n    return fetch(this._baseUrl + '/cards', {\n      method: 'POST',\n      headers: {\n        authorization: this._headers,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: formData.place,\n        link: formData.url\n      })\n    })\n    .then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Что-то пошло не так: ${res.status}`);\n    });\n  }\n\n  // публичный метод удаления своей карточки v2\n  deleteMyCard(cardId) {\n    return fetch(this._baseUrl + '/cards/' + cardId, {\n      method: 'DELETE',\n      headers: {\n        authorization: this._headers\n      }\n    })\n    .then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Что-то пошло не так: ${res.status}`);\n    });\n  }\n\n  // публичный метод постановки лайка v2\n  putLike(cardId) {\n    return fetch(this._baseUrl + '/cards/likes/' + cardId, {\n      method: 'PUT',\n      headers: {\n        authorization: this._headers\n      }\n    })\n    .then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Что-то пошло не так: ${res.status}`);\n    });\n  }\n\n  // публичный метод снятия лайка v2\n  delLike(cardId) {\n    return fetch(this._baseUrl + '/cards/likes/' + cardId, {\n      method: 'DELETE',\n      headers: {\n        authorization: this._headers\n      }\n    })\n    .then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Что-то пошло не так: ${res.status}`);\n    });\n  }\n\n  // публичный метод загрузки аватара v2\n  patchAvatar(avatarUrl) {\n    return fetch(this._baseUrl + '/users/me/avatar', {\n      method: 'PATCH',\n      headers: {\n        authorization: this._headers,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        avatar: avatarUrl,\n      })\n    })\n    .then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Что-то пошло не так: ${res.status}`);\n    });\n  }\n}\n\n// ------------ Api ----------- //\nexport const api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-12',\n  headers: '71b905c5-e266-4c23-af42-a4b6735dea36',\n});\n","// Main.js\n\nimport React from 'react';\nimport Card from './Card';\nimport { api } from '../utils/Api';\n\nfunction Main({\n  onEditAvatar,\n  onEditProfile,\n  onAddPlace,\n  onCardClick,\n}) {\n\n  // Переменные состояния\n  const [userName, setUserName] = React.useState();\n  const [userDescription, setUserDescription] = React.useState();\n  const [userAvatar, setUserAvatar] = React.useState();\n  const [cards, setCards] = React.useState([]);\n\n  // API-запрос\n  React.useEffect(() => {\n    Promise.all([api.getUserInfo(), api.getInitialCards()])\n    .then(([userInfo, allCards]) => {\n      setUserName(userInfo.name);\n      setUserDescription(userInfo.about);\n      setUserAvatar(userInfo.avatar);\n      setCards(allCards.map(item => ({\n        id: item._id,\n        name: item.name,\n        link: item.link,\n        likes: item.likes.length,\n        })));\n    })\n    .catch((err) => {\n      console.log('Ошибка. Запрос не выполнен: ', err);\n    });\n  }, []);\n\n  return (\n    <main className=\"content\">\n      <section className=\"profile\">\n        <div className=\"profile__avatar-container\">\n          <img src={userAvatar} alt={userName} className=\"profile__avatar\" />\n          <div className=\"profile__avatar-overlay\">\n            <button type=\"button\" className=\"profile__patchavatar-btn\" aria-label=\"Редактировать\" onClick={onEditAvatar}></button>\n          </div>\n        </div>\n        <div className=\"profile__profile-info\">\n          <h1 className=\"profile__title\">{userName}</h1>\n          <button type=\"button\" className=\"profile__edit-button\" aria-label=\"Редактировать\" onClick={onEditProfile}></button>\n          <p className=\"profile__subtitle\">{userDescription}</p>\n        </div>\n        <button type=\"button\" className=\"profile__add-button\" aria-label=\"Добавить\" onClick={onAddPlace}></button>\n      </section>\n      <section className=\"card-container\">\n        {\n          cards.map(item => <Card key={item.id} card={item} onCardClick={onCardClick} />)\n        }\n      </section>\n    </main>\n  );\n}\n\nexport default Main;\n\n","// PopupWithForm.js\n\nimport React from 'react';\n\nfunction PopupWithForm({ name, title, children, btnText, isOpen, onClose }) {\n  return (\n    <section className={`popup popup_type_${name} ${isOpen ? 'popup_opened' : ''}`}>\n      <form name={name} method=\"POST\" action=\"#\" className={`popup__form popup__container popup__container_formtype_${name}`} noValidate>\n        <h2 className=\"popup__title\">{title}</h2>\n        {children}\n        <button type=\"submit\" className={`popup__submit popup__btn popup__btn_action_${name}`}>{btnText}</button>\n        <button type=\"button\" className={`popup__btn-close popup__btn-close_formtype_${name}`} aria-label=\"Закрыть\" onClick={onClose}></button>\n      </form>\n    </section>\n  );\n}\n\nexport default PopupWithForm;\n","// InputAvatarForm.js\n\nimport React from 'react';\n\nfunction InputAvatarForm() {\n  return (\n    <>\n    <input type=\"text\" name=\"url\" placeholder=\"Ссылка на картинку\" id=\"url-input\" className=\"popup__text popup__text_location_center popup__text_type_avatar-url\" required pattern=\"^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w\\.-]*)*\\/?$\" />\n    <span className=\"popup__text-error popup__text-error_active\" id=\"url-input-error\">Введите адрес изображения.</span>\n    </>\n  );\n}\n\nexport default InputAvatarForm;\n","// InputAddForm.js\n\nimport React from 'react';\n\nfunction InputAddForm() {\n  return (\n    <>\n      <input type=\"text\" name=\"place\" placeholder=\"Название\" id=\"place-input\" className=\"popup__text popup__text_location_top popup__text_type_place\" minLength=\"1\" maxLength=\"30\" required />\n      <span className=\"popup__text-error popup__text-error_active\" id=\"place-input-error\">Вы пропустили это поле.</span>\n      <input type=\"text\" name=\"url\" placeholder=\"Ссылка на картинку\" id=\"url-input\" className=\"popup__text popup__text_location_bottom popup__text_type_url\" required pattern=\"^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w\\.-]*)*\\/?$\" />\n      <span className=\"popup__text-error popup__text-error_active\" id=\"url-input-error\">Введите адрес сайта.</span>\n    </>\n  );\n}\n\nexport default InputAddForm;\n","// InputEditForm.js\n\nimport React from 'react';\n\nfunction InputEditForm() {\n  return (\n    <>\n      <input type=\"text\" name=\"name\" placeholder=\"Имя\" id=\"name-input\" className=\"popup__text popup__text_location_top popup__text_type_name\" minLength=\"2\" maxLength=\"40\" required pattern=\"[А-Яа-яA-Za-z -]{1,}\" />\n      <span className=\"popup__text-error\" id=\"name-input-error\">Введите данные.</span>\n      <input type=\"text\" name=\"about\" placeholder=\"О себе\" id=\"about-input\" className=\"popup__text popup__text_location_bottom popup__text_type_about\" minLength=\"2\" maxLength=\"200\" required />\n      <span className=\"popup__text-error\" id=\"about-input-error\">Введите данные.</span>\n    </>\n  );\n}\n\nexport default InputEditForm;\n","// ImagePopup.js\n\nimport React from 'react';\n\nfunction ImagePopup({ cardOpen, onClose, cardData }) {\n  return (\n    <section className={`popup popup_type_image ${cardOpen ? 'popup_opened' : ''}`}>\n      <figure className=\"popup__form popup__img-container\">\n        <button type=\"button\" className=\"popup__btn-close popup__btn-close_formtype_image\" aria-label=\"Закрыть\" onClick={onClose}></button>\n        <img className=\"popup__big-image\" src={cardData.link} alt={cardData.name} />\n        <figcaption className=\"popup__figcaption\">{cardData.name}</figcaption>\n      </figure>\n    </section>\n  );\n}\n\nexport default ImagePopup;\n","// Footer.js\n\nimport React from 'react';\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\">\n      <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","// App.js\n\nimport React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport PopupWithForm from './PopupWithForm';\nimport InputAvatarForm from './InputAvatarForm';\nimport InputAddForm from './InputAddForm';\nimport InputEditForm from './InputEditForm';\nimport ImagePopup from './ImagePopup';\nimport Footer from './Footer';\n\nfunction App() {\n  // переменные состояния\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState(false);\n  const [cardData, setCardData] = React.useState({});\n\n  // обработчик клика по изображению карточки\n  function handleCardClick(card) {\n    setSelectedCard(true);\n    setCardData({\n      link: card.link,\n      name: card.name,\n    });\n  }\n  // обработчик открытия попапа \"редактирования профиля\"\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n  // обработчик открытия попапа \"добавления новой карточки\"\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n  // обработчик открытия попапа \"смены аватара\"\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n  // обработчик закрытия всех попапов\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard(false);\n  }\n\n  return (\n  <>\n  <div className=\"page\">\n    <Header />\n    <Main\n      onEditAvatar={handleEditAvatarClick}\n      onEditProfile={handleEditProfileClick}\n      onAddPlace={handleAddPlaceClick}\n      onCardClick={handleCardClick}\n    />\n    <PopupWithForm name=\"edit\" title=\"Редактировать профиль\" children={<InputEditForm />} btnText=\"Сохранить\" isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} />\n    <PopupWithForm name=\"add\" title=\"Новое место\" children={<InputAddForm />} btnText=\"Создать\" isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} />\n    <PopupWithForm name=\"del\" title=\"Вы уверены?\" children=\"\" btnText=\"Да\" />\n    <PopupWithForm name=\"avatar\" title=\"Обновить аватар\" children={<InputAvatarForm />} btnText=\"Сохранить\" isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} />\n    <ImagePopup cardOpen={selectedCard} onClose={closeAllPopups} cardData={cardData} />\n    <Footer />\n  </div>\n  </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/header__logo.c6f11019.svg\";"],"sourceRoot":""}