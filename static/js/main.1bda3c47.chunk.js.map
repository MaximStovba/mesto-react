{"version":3,"sources":["components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/PopupWithForm.js","components/InputEditForm.js","components/EditProfilePopup.js","components/InputAvatarForm.js","components/EditAvatarPopup.js","components/InputAddForm.js","components/AddPlacePopup.js","components/ImagePopup.js","components/Footer.js","utils/Api.js","components/App.js","serviceWorker.js","index.js","images/header__logo.svg"],"names":["Header","className","src","logo","alt","CurrentUserContext","React","createContext","Card","card","onCardClick","onCardLike","onCardDelete","currentUser","useContext","isOwn","owner","_id","isLiked","likes","some","i","cardDeleteButtonClassName","cardLikeButtonClassName","link","name","onClick","length","type","aria-label","Main","onEditAvatar","onEditProfile","onAddPlace","cards","avatar","about","map","item","key","PopupWithForm","title","children","btnText","isOpen","onClose","onSubmit","isSbmtBtnActiv","method","action","noValidate","disabled","InputEditForm","description","handleChangeName","handleChangeDescription","isNameValid","isDescriptionValid","validNameMessage","validDescriptionMessage","defaultValue","onChange","placeholder","id","minLength","maxLength","required","pattern","EditProfilePopup","onUpdateUser","submitBtnText","handleChangeProfileName","handleChangeProfileDescription","useState","setName","setDescription","useEffect","e","target","value","preventDefault","InputAvatarForm","avatarRef","isValid","validationMessage","handleChangeAvatarInput","ref","EditAvatarPopup","onUpdateAvatar","useRef","current","reset","InputAddForm","placeRef","urlRef","handleChangePlace","handleChangeUrl","isPlaceValid","isUrlValid","validPlaceMessage","validUrlMessage","AddPlacePopup","place","url","ImagePopup","cardOpen","cardData","Footer","api","baseUrl","headers","this","_baseUrl","_headers","fetch","authorization","then","res","ok","json","Promise","reject","status","formData","body","JSON","stringify","cardId","avatarUrl","App","setCards","getInitialCards","allCards","catch","err","console","log","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","setCardData","setCurrentUser","submitAddBtnText","setSubmitAddBtnText","submitCreateBtnText","setSubmitCreateBtnText","isAvatarValid","setIsAvatarValid","setIsNameValid","setIsDescriptionValid","setIsPlaceValid","setIsUrlValid","setIsSbmtBtnActiv","setValidationMessage","setValidNameMessage","setValidDescriptionMessage","setValidPlaceMessage","setValidUrlMessage","closeAllPopups","getUserInfo","userInfo","Provider","changeLikeCardStatus","newCard","newCards","c","deleteMyCard","delCard","filter","patchUserInfo","finally","validity","valid","patchAvatar","postNewCard","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.1bda3c47.chunk.js","sourcesContent":["// Header.js\n\nimport React from 'react';\nimport logo from '../images/header__logo.svg';\n\nfunction Header() {\n  return (\n    <header className=\"header\">\n      <img src={logo} alt=\"Логотип\" className=\"header__logo\" />\n    </header>\n  );\n}\n\nexport default Header;\n","// CurrentUserContext.js\n\nimport React from 'react';\nexport const CurrentUserContext = React.createContext();\n","// Card.js\n\nimport React from 'react';\n// импортируем объект контекста\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction Card({ card, onCardClick, onCardLike, onCardDelete }) {\n\n  // Подписываемся на контекст CurrentUserContext\n  const currentUser = React.useContext(CurrentUserContext);\n\n  // Определяем, являемся ли мы владельцем текущей карточки\n  const isOwn = card.owner._id === currentUser._id;\n  // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\n  const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n  // Создаём переменную, которую зададим в `className` для кнопки удаления\n  const cardDeleteButtonClassName = (\n    `card__trash ${isOwn ? '' : 'card__trash_hidden'}`\n  );\n  // Создаём переменную, которую зададим в `className` для кнопки лайка\n  const cardLikeButtonClassName = (\n    `card__like ${isLiked ? 'card__like_active' : ''}`\n  );\n\n  function handleClick() {\n    onCardClick(card);\n  }\n\n  function handleLikeClick() {\n    onCardLike(card);\n  }\n\n  function handleDeleteClick() {\n    onCardDelete(card);\n  }\n\n  return (\n    <div className=\"card\">\n      <img className=\"card__image\" src={card.link} alt={card.name} onClick={handleClick} />\n      <h2 className=\"card__title\">{card.name}</h2>\n      <p className=\"card__num-like\">{card.likes.length}</p>\n      <button type=\"submit\" className={cardLikeButtonClassName} aria-label=\"Лайкнуть\" onClick={handleLikeClick}></button>\n      <button type=\"submit\" className={cardDeleteButtonClassName} aria-label=\"Удалить\" onClick={handleDeleteClick}></button>\n    </div>\n  );\n}\n\nexport default Card;\n","// Main.js\n\nimport React from 'react';\nimport Card from './Card';\n// import { api } from '../utils/Api';\n// импортируем объект контекста\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction Main({\n  onEditAvatar,\n  onEditProfile,\n  onAddPlace,\n  onCardClick,\n  onCardLike,\n  onCardDelete,\n  cards,\n  }) {\n\n  // Подписываемся на контекст CurrentUserContext\n  const currentUser = React.useContext(CurrentUserContext);\n\n  return (\n    <main className=\"content\">\n      <section className=\"profile\">\n        <div className=\"profile__avatar-container\">\n          <img src={currentUser.avatar} alt={currentUser.name} className=\"profile__avatar\" />\n          <div className=\"profile__avatar-overlay\">\n            <button type=\"button\" className=\"profile__patchavatar-btn\" aria-label=\"Редактировать\" onClick={onEditAvatar}></button>\n          </div>\n        </div>\n        <div className=\"profile__profile-info\">\n          <h1 className=\"profile__title\">{currentUser.name}</h1>\n          <button type=\"button\" className=\"profile__edit-button\" aria-label=\"Редактировать\" onClick={onEditProfile}></button>\n          <p className=\"profile__subtitle\">{currentUser.about}</p>\n        </div>\n        <button type=\"button\" className=\"profile__add-button\" aria-label=\"Добавить\" onClick={onAddPlace}></button>\n      </section>\n      <section className=\"card-container\">\n        {\n          cards.map(item => <Card key={item._id} card={item} onCardClick={onCardClick} onCardLike={onCardLike} onCardDelete={onCardDelete} />)\n        }\n      </section>\n    </main>\n  );\n}\n\nexport default Main;\n\n","// PopupWithForm.js\n\nimport React from 'react';\n\nfunction PopupWithForm({\n  name,\n  title,\n  children,\n  btnText,\n  isOpen,\n  onClose,\n  onSubmit,\n  isSbmtBtnActiv,\n  }) {\n  return (\n    <section className={`popup popup_type_${name} ${isOpen ? 'popup_opened' : ''}`}>\n      <form name={name} method=\"POST\" onSubmit={onSubmit} action=\"#\" className={`popup__form popup__container popup__container_formtype_${name}`} noValidate>\n        <h2 className=\"popup__title\">{title}</h2>\n        {children}\n        <button\n          disabled={isSbmtBtnActiv ? false : true}\n          type=\"submit\"\n          className={`popup__submit popup__btn popup__btn_action_${name} ${isSbmtBtnActiv ? '' : 'popup__btn_disabled'}`}>{btnText}</button>\n        <button\n          type=\"reset\"\n          className={`popup__btn-close popup__btn-close_formtype_${name}`} aria-label=\"Закрыть\" onClick={onClose}></button>\n      </form>\n    </section>\n  );\n}\n\nexport default PopupWithForm;\n","// InputEditForm.js\n\nimport React from 'react';\n\nfunction InputEditForm({\n  name,\n  description,\n  handleChangeName,\n  handleChangeDescription,\n  isNameValid,\n  isDescriptionValid,\n  validNameMessage,\n  validDescriptionMessage,\n  }) {\n\n  return (\n    <>\n      <input\n        type=\"text\"\n        defaultValue={name}\n        onChange={handleChangeName}\n        name=\"name\"\n        placeholder=\"Имя\"\n        id=\"name-input\"\n        className=\"popup__text popup__text_location_top popup__text_type_name\"\n        minLength=\"2\"\n        maxLength=\"40\"\n        required pattern=\"[А-Яа-яA-Za-z -]{1,}\"\n        />\n      <span\n        //className=\"popup__text-error\"\n        className={`popup__text-error ${isNameValid ? '' : 'popup__text-error_active'}`}\n        id=\"name-input-error\">{validNameMessage}</span>\n      <input\n        type=\"text\"\n        defaultValue={description}\n        onChange={handleChangeDescription}\n        name=\"about\"\n        placeholder=\"О себе\"\n        id=\"about-input\"\n        className=\"popup__text popup__text_location_bottom popup__text_type_about\"\n        minLength=\"2\"\n        maxLength=\"200\"\n        required\n        />\n      <span\n        //className=\"popup__text-error\"\n        className={`popup__text-error ${isDescriptionValid ? '' : 'popup__text-error_active'}`}\n        id=\"about-input-error\">{validDescriptionMessage}</span>\n    </>\n  );\n}\n\nexport default InputEditForm;\n","// EditProfilePopup.js\n\nimport React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport InputEditForm from './InputEditForm';\n// импортируем объект контекста\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\n\nfunction EditProfilePopup({\n    isOpen,\n    onClose,\n    onUpdateUser,\n    submitBtnText,\n    isNameValid,\n    isDescriptionValid,\n    validNameMessage,\n    validDescriptionMessage,\n    handleChangeProfileName,\n    handleChangeProfileDescription,\n    isSbmtBtnActiv,\n    }) {\n\n    // Стейт, в котором содержится значение инпута\n    const [name, setName] = React.useState('');\n    const [description, setDescription] = React.useState('');\n\n    // Обработчик изменения инпута обновляет стейт\n    function handleChangeName(e) {\n      setName(e.target.value);\n      handleChangeProfileName(e);\n    }\n\n    // Обработчик изменения инпута обновляет стейт\n    function handleChangeDescription(e) {\n      setDescription(e.target.value);\n      handleChangeProfileDescription(e);\n    }\n\n    // Подписываемся на контекст CurrentUserContext\n    const currentUser = React.useContext(CurrentUserContext);\n\n    // После загрузки текущего пользователя из API\n    // его данные будут использованы в управляемых компонентах.\n    React.useEffect(() => {\n      setName(currentUser.name);\n      setDescription(currentUser.about);\n    }, [currentUser]);\n\n    // Обработчик сабмита формы\n    function handleSubmit(e) {\n      // Запрещаем браузеру переходить по адресу формы\n      e.preventDefault();\n      // Передаём значения управляемых компонентов во внешний обработчик\n      onUpdateUser({\n        name: name,\n        about: description,\n      });\n    }\n\n  return (\n    <PopupWithForm\n      name=\"edit\"\n      title=\"Редактировать профиль\"\n      children={<InputEditForm\n        name={name}\n        description={description}\n        handleChangeName={handleChangeName}\n        handleChangeDescription={handleChangeDescription}\n        isNameValid={isNameValid}\n        isDescriptionValid={isDescriptionValid}\n        validNameMessage={validNameMessage}\n        validDescriptionMessage={validDescriptionMessage}\n        />}\n      btnText={submitBtnText}\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n      isSbmtBtnActiv={isSbmtBtnActiv}\n      />\n  );\n}\n\nexport default EditProfilePopup;\n","// InputAvatarForm.js\n\nimport React from 'react';\n\nfunction InputAvatarForm({\n  avatarRef,\n  isValid,\n  validationMessage,\n  handleChangeAvatarInput,\n  }) {\n\n  return (\n    <>\n      <input\n        ref={avatarRef}\n        onChange={handleChangeAvatarInput}\n        type=\"text\"\n        name=\"url\"\n        placeholder=\"Ссылка на картинку\"\n        id=\"url-input\"\n        className=\"popup__text popup__text_location_center popup__text_type_avatar-url\"\n        required\n        pattern=\"^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w\\.-]*)*\\/?$\"\n        />\n      <span\n        className={`popup__text-error ${isValid ? '' : 'popup__text-error_active'}`}\n        id=\"url-input-error\">{validationMessage}</span>\n    </>\n  );\n}\n\nexport default InputAvatarForm;\n","// EditAvatarPopup.js\n\nimport React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport InputAvatarForm from './InputAvatarForm';\n\nfunction EditAvatarPopup({\n    isOpen,\n    onClose,\n    onUpdateAvatar,\n    submitBtnText,\n    isValid,\n    isSbmtBtnActiv,\n    validationMessage,\n    handleChangeAvatarInput\n    }) {\n\n  // реф инпута url аватара\n  const avatarRef = React.useRef();\n\n  // обработчик сабмита формы\n  function handleSubmit(e) {\n    // Запрещаем браузеру переходить по адресу формы\n    e.preventDefault();\n    // Передаём значения управляемых компонентов во внешний обработчик\n    onUpdateAvatar({\n      avatar: avatarRef.current.value,\n    });\n    // сбрасываем все поля формы\n    e.target.reset();\n  }\n\n  return (\n    <PopupWithForm\n      name=\"avatar\"\n      title=\"Обновить аватар\"\n      children={<InputAvatarForm\n        avatarRef={avatarRef}\n        handleChangeAvatarInput={handleChangeAvatarInput}\n        isValid={isValid}\n        validationMessage={validationMessage}\n        />}\n      btnText={submitBtnText}\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n      isSbmtBtnActiv={isSbmtBtnActiv}\n      />\n  );\n}\n\nexport default EditAvatarPopup;\n","// InputAddForm.js\n\nimport React from 'react';\n\nfunction InputAddForm({\n  placeRef,\n  urlRef,\n  handleChangePlace,\n  handleChangeUrl,\n  isPlaceValid,\n  isUrlValid,\n  validPlaceMessage,\n  validUrlMessage,\n  }) {\n  return (\n    <>\n      <input ref={placeRef} type=\"text\"\n        onChange={handleChangePlace}\n        name=\"place\"\n        placeholder=\"Название\"\n        id=\"place-input\"\n        className=\"popup__text popup__text_location_top popup__text_type_place\"\n        minLength=\"2\"\n        maxLength=\"30\"\n        required\n        />\n      <span\n        //className=\"popup__text-error popup__text-error_active\"\n        className={`popup__text-error ${isPlaceValid ? '' : 'popup__text-error_active'}`}\n        id=\"place-input-error\">{validPlaceMessage}</span>\n      <input ref={urlRef} type=\"text\"\n        onChange={handleChangeUrl}\n        name=\"url\"\n        placeholder=\"Ссылка на картинку\"\n        id=\"url-input\"\n        className=\"popup__text popup__text_location_bottom popup__text_type_url\"\n        required\n        pattern=\"^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w\\.-]*)*\\/?$\"\n        />\n      <span\n        //className=\"popup__text-error popup__text-error_active\"\n        className={`popup__text-error ${isUrlValid ? '' : 'popup__text-error_active'}`}\n        id=\"url-input-error\">{validUrlMessage}</span>\n    </>\n  );\n}\n\nexport default InputAddForm;\n","// AddPlacePopup.js\n\nimport React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport InputAddForm from './InputAddForm';\n\n\nfunction AddPlacePopup({\n    isOpen,\n    onClose,\n    onAddPlace,\n    submitBtnText,\n    handleChangePlace,\n    handleChangeUrl,\n    isPlaceValid,\n    isUrlValid,\n    validPlaceMessage,\n    validUrlMessage,\n    isSbmtBtnActiv,\n    }) {\n\n  // рефы инпутов\n  const placeRef = React.useRef();\n  const urlRef = React.useRef();\n\n  // Обработчик сабмита формы\n  function handleSubmit(e) {\n    // Запрещаем браузеру переходить по адресу формы\n    e.preventDefault();\n    // Передаём значения управляемых компонентов во внешний обработчик\n    onAddPlace({\n      place: placeRef.current.value,\n      url: urlRef.current.value,\n    });\n    // сбрасываем все поля формы\n    e.target.reset();\n  }\n\n  return (\n    <PopupWithForm\n      name=\"add\"\n      title=\"Новое место\"\n      children={<InputAddForm\n        placeRef={placeRef}\n        urlRef={urlRef}\n        handleChangePlace={handleChangePlace}\n        handleChangeUrl={handleChangeUrl}\n        isPlaceValid={isPlaceValid}\n        isUrlValid={isUrlValid}\n        validPlaceMessage={validPlaceMessage}\n        validUrlMessage={validUrlMessage}\n        />}\n      btnText={submitBtnText}\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n      isSbmtBtnActiv={isSbmtBtnActiv}\n      />\n  );\n}\n\nexport default AddPlacePopup;\n","// ImagePopup.js\n\nimport React from 'react';\n\nfunction ImagePopup({ cardOpen, onClose, cardData }) {\n  return (\n    <section className={`popup popup_type_image ${cardOpen ? 'popup_opened' : ''}`}>\n      <figure className=\"popup__form popup__img-container\">\n        <button type=\"button\" className=\"popup__btn-close popup__btn-close_formtype_image\" aria-label=\"Закрыть\" onClick={onClose}></button>\n        <img className=\"popup__big-image\" src={cardData.link} alt={cardData.name} />\n        <figcaption className=\"popup__figcaption\">{cardData.name}</figcaption>\n      </figure>\n    </section>\n  );\n}\n\nexport default ImagePopup;\n","// Footer.js\n\nimport React from 'react';\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\">\n      <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","// Api.js\n\nclass Api {\n  constructor({ baseUrl, headers }) {\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n\n  // публичный метод загрузки профиля пользователя с сервера v2\n  getUserInfo() {\n    return fetch(this._baseUrl + '/users/me', {\n      headers: {\n        authorization: this._headers\n      }\n    })\n    .then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Что-то пошло не так: ${res.status}`);\n    });\n  }\n\n  // публичный метод загрузки карточек с сервера v2\n  getInitialCards() {\n    return fetch(this._baseUrl + '/cards', {\n      headers: {\n        authorization: this._headers\n      }\n    })\n    .then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Что-то пошло не так: ${res.status}`);\n    });\n  }\n\n  // публичный метод загрузки новых данных пользователя на сервер v2\n  patchUserInfo(formData) {\n    return fetch(this._baseUrl + '/users/me', {\n      method: 'PATCH',\n      headers: {\n        authorization: this._headers,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: formData.name,\n        about: formData.about\n      })\n    })\n    .then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Что-то пошло не так: ${res.status}`);\n    });\n  }\n\n  // публичный метод добавления новой карточки v2\n  postNewCard(formData) {\n    return fetch(this._baseUrl + '/cards', {\n      method: 'POST',\n      headers: {\n        authorization: this._headers,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: formData.place,\n        link: formData.url\n      })\n    })\n    .then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Что-то пошло не так: ${res.status}`);\n    });\n  }\n\n  // публичный метод удаления своей карточки v2\n  deleteMyCard(cardId) {\n    return fetch(this._baseUrl + '/cards/' + cardId, {\n      method: 'DELETE',\n      headers: {\n        authorization: this._headers\n      }\n    })\n    .then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Что-то пошло не так: ${res.status}`);\n    });\n  }\n\n  // публичный метод постановки лайка v2\n  putLike(cardId) {\n    return fetch(this._baseUrl + '/cards/likes/' + cardId, {\n      method: 'PUT',\n      headers: {\n        authorization: this._headers\n      }\n    })\n    .then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Что-то пошло не так: ${res.status}`);\n    });\n  }\n\n  // публичный метод снятия лайка v2\n  delLike(cardId) {\n    return fetch(this._baseUrl + '/cards/likes/' + cardId, {\n      method: 'DELETE',\n      headers: {\n        authorization: this._headers\n      }\n    })\n    .then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Что-то пошло не так: ${res.status}`);\n    });\n  }\n\n  // публичный метод постановки / снятия лайков v3\n  changeLikeCardStatus(cardId, isLiked) {\n    return fetch(this._baseUrl + '/cards/likes/' + cardId, {\n      method: isLiked ? 'PUT' : 'DELETE',\n      headers: {\n        authorization: this._headers\n      }\n    })\n    .then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Что-то пошло не так: ${res.status}`);\n    });\n  }\n\n  // публичный метод загрузки аватара v2\n  patchAvatar(avatarUrl) {\n    return fetch(this._baseUrl + '/users/me/avatar', {\n      method: 'PATCH',\n      headers: {\n        authorization: this._headers,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        avatar: avatarUrl.avatar,\n      })\n    })\n    .then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Что-то пошло не так: ${res.status}`);\n    });\n  }\n}\n\n// ------------ Api ----------- //\nexport const api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-12',\n  headers: '71b905c5-e266-4c23-af42-a4b6735dea36',\n});\n","// App.js\n\nimport React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport PopupWithForm from './PopupWithForm';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport ImagePopup from './ImagePopup';\nimport Footer from './Footer';\n// импортируем api\nimport { api } from '../utils/Api';\n// импортируем объект контекста\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction App() {\n\n  // ------------- CARDS ----------------\n  // Переменные состояния\n  const [cards, setCards] = React.useState([]);\n\n  // API-запрос >\n  React.useEffect(() => {\n    api.getInitialCards()\n    .then((allCards) => {\n      setCards(allCards);\n    })\n    .catch((err) => {\n      console.log('Ошибка. Запрос не выполнен: ', err);\n    });\n  }, []);\n\n  // обработчик лайков и дизлайков\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.changeLikeCardStatus(card._id, !isLiked)\n    .then((newCard) => {\n      // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n      const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n      // Обновляем стейт\n      setCards(newCards);\n    })\n    .catch((err) => {\n      console.log('Ошибка. Запрос не выполнен: ', err);\n    });\n  }\n\n  // обработчик удаления своей карточки\n  function handleCardDelete(card) {\n    api.deleteMyCard(card._id)\n    .then((delCard) => {\n      // Cоздаем копию массива, исключив из него удалённую карточку\n      const newCards = cards.filter((c) => c._id !== card._id);\n      console.log(delCard);\n      // Обновляем стейт\n      setCards(newCards);\n    })\n    .catch((err) => {\n      console.log('Ошибка. Запрос не выполнен: ', err);\n    });\n  }\n// ------------- CARDS ----------------\n\n  // переменные состояния попап\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n\n  const [selectedCard, setSelectedCard] = React.useState(false);\n  const [cardData, setCardData] = React.useState({});\n  const [currentUser, setCurrentUser] = React.useState({});\n\n  // переменная состояния кнопки сабмита \"сохранить\"\n  const [submitAddBtnText, setSubmitAddBtnText] = React.useState('Cохранить');\n  // переменная состояния кнопки сабмита \"создать\"\n  const [submitCreateBtnText, setSubmitCreateBtnText] = React.useState('Создать');\n  // переменная состояния валидности полей ввода форм\n  const [isAvatarValid, setIsAvatarValid] = React.useState(false); // аватар\n  const [isNameValid, setIsNameValid] = React.useState(false); // имя пользователя\n  const [isDescriptionValid, setIsDescriptionValid] = React.useState(false); // описание пользователя\n  const [isPlaceValid, setIsPlaceValid] = React.useState(false);\n  const [isUrlValid, setIsUrlValid] = React.useState(false);\n\n  // переменная состояния кнопки сабмита\n  const [isSbmtBtnActiv, setIsSbmtBtnActiv] = React.useState(false); // активность\n  // переменная состояния validationMessage\n  const [validationMessage, setValidationMessage] = React.useState('Введите данные');\n  const [validNameMessage, setValidNameMessage] = React.useState('Введите данные');\n  const [validDescriptionMessage, setValidDescriptionMessage] = React.useState('Введите данные');\n  const [validPlaceMessage, setValidPlaceMessage] = React.useState('Введите данные');\n  const [validUrlMessage, setValidUrlMessage] = React.useState('Введите данные');\n\n\n\n  // получаем информацию о пользователе\n  React.useEffect(() => {\n    api.getUserInfo()\n    .then((userInfo) => {\n      setCurrentUser(userInfo)\n    })\n    .catch((err) => {\n      console.log('Ошибка. Запрос не выполнен: ', err);\n    });\n  }, []);\n\n  // обработчик клика по изображению карточки\n  function handleCardClick(card) {\n    setSelectedCard(true);\n    setCardData({\n      link: card.link,\n      name: card.name,\n    });\n  }\n\n  // обработчик открытия попапа \"редактирования профиля\"\n  function handleEditProfileClick() {\n    // открываем попап\n    setIsEditProfilePopupOpen(true);\n    // скрываем ошибки валидации при открытии\n    setIsNameValid(true);\n    setValidNameMessage('|');\n    setIsDescriptionValid(true);\n    setValidDescriptionMessage('|');\n    // делаем кнопку сабмита активной при открытии\n    setIsSbmtBtnActiv(true);\n  }\n\n  // обработчик открытия попапа \"добавления новой карточки\"\n  function handleAddPlaceClick() {\n    // открываем попап\n    setIsAddPlacePopupOpen(true);\n    setIsPlaceValid(false);\n    setValidPlaceMessage('Введите данные');\n    setIsUrlValid(false);\n    setValidUrlMessage('Введите данные');\n    // делаем кнопку сабмита неактивной при открытии\n    setIsSbmtBtnActiv(false);\n  }\n\n  // обработчик открытия попапа \"смены аватара\"\n  function handleEditAvatarClick() {\n    // открываем попап\n    setIsEditAvatarPopupOpen(true);\n    // скрываем ошибки валидации при открытии\n    setIsAvatarValid(true);\n    // делаем кнопку сабмита неактивной\n    setIsSbmtBtnActiv(false);\n  }\n\n  // обработчик закрытия всех попапов\n  function closeAllPopups(e) {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard(false);\n  }\n\n  // обработчик обновления информации о пользователе\n  function handleUpdateUser(formData) {\n    // меняем название кнопки сабмита перед началом загрузки\n    // добавляем надпись \"Сохранение...\"\n    setSubmitAddBtnText('Cохранение...');\n    // сохранение данных профиля на сервере\n    api.patchUserInfo(formData)\n      .then((userInfo) => {\n        setCurrentUser(userInfo);\n      })\n      .catch((err) => {\n        console.log('Ошибка. Запрос не выполнен: ', err);\n      })\n      .finally(() => {\n        // меняем название кнопки сабмита при завершении загрузки\n        setSubmitAddBtnText('Cохранить');\n      });\n    closeAllPopups();\n  }\n\n  // обработчик смены аватара пользователя\n  function handleUpdateAvatar(avatarUrl) {\n    // меняем название кнопки сабмита перед началом загрузки\n    // добавляем надпись \"Сохранение...\"\n    setSubmitAddBtnText('Cохранение...');\n    api.patchAvatar(avatarUrl)\n      .then((userInfo) => {\n        setCurrentUser(userInfo);\n      })\n      .catch((err) => {\n        console.log('Ошибка. Запрос не выполнен: ', err);\n      })\n      .finally(() => {\n        // меняем название кнопки сабмита при завершении загрузки\n        setSubmitAddBtnText('Cохранить');\n      });\n    closeAllPopups();\n  }\n\n  // ------------- валидация полей ввода форм -------------------\n  // Обработчик изменения инпута \"аватара\"\n  function handleChangeAvatarInput(e) {\n    if (e.target.validity.valid) {\n      setIsAvatarValid(true);\n      setIsSbmtBtnActiv(true);\n    } else {\n      setIsAvatarValid(false);\n      setIsSbmtBtnActiv(false);\n      setValidationMessage(e.target.validationMessage);\n    }\n  }\n  // -------- форма изменения профиля пользователя ----------\n  React.useEffect(() => {\n    if (isNameValid === true && isDescriptionValid === true) {\n      setIsSbmtBtnActiv(true);\n    } else {\n      setIsSbmtBtnActiv(false);\n    }\n  }, [isNameValid, isDescriptionValid]);\n  // Обработчик изменения инпута \"имени пользователя\"\n  function handleChangeProfileName(e) {\n    if (e.target.validity.valid) {\n      setIsNameValid(true);\n      setValidNameMessage('|');\n    } else {\n      setIsNameValid(false);\n      setValidNameMessage(e.target.validationMessage);\n    }\n  }\n  // Обработчик изменения инпута \"описания пользователя\"\n  function handleChangeProfileDescription(e) {\n    if (e.target.validity.valid) {\n      setIsDescriptionValid(true);\n      setValidDescriptionMessage('|');\n    } else {\n      setIsDescriptionValid(false);\n      setValidDescriptionMessage(e.target.validationMessage);\n    }\n  }\n  // -------- форма создания новой карточки ----------\n  React.useEffect(() => {\n    if (isPlaceValid === true && isUrlValid === true) {\n      setIsSbmtBtnActiv(true);\n    } else {\n      setIsSbmtBtnActiv(false);\n    }\n  }, [isPlaceValid, isUrlValid]);\n\n  // Обработчик изменения инпута \"места\"\n  function handleChangePlace(e) {\n    if (e.target.validity.valid) {\n      setIsPlaceValid(true);\n      setValidPlaceMessage('|');\n    } else {\n      setIsPlaceValid(false);\n      setValidPlaceMessage(e.target.validationMessage);\n    }\n  }\n  // Обработчик изменения инпута \"ссылки\"\n  function handleChangeUrl(e) {\n    if (e.target.validity.valid) {\n      setIsUrlValid(true);\n      setValidUrlMessage('|');\n    } else {\n      setIsUrlValid(false);\n      setValidUrlMessage(e.target.validationMessage);\n    }\n  }\n  // ------------- валидация полей ввода форм ---------------\n\n  // обработчик добавления новой карточки\n  function handleAddPlace(formData) {\n    // меняем название кнопки сабмита перед началом загрузки\n    // добавляем надпись \"Сохранение...\"\n    setSubmitCreateBtnText('Cохранение...');\n    api.postNewCard(formData)\n      .then((newCard) => {\n        setCards([newCard, ...cards]);\n      })\n      .catch((err) => {\n        console.log('Ошибка. Запрос не выполнен: ', err);\n      })\n      .finally(() => {\n        // меняем название кнопки сабмита при завершении загрузки\n        setSubmitCreateBtnText('Создать');\n      });\n    closeAllPopups();\n  }\n\n  return (\n  <CurrentUserContext.Provider value={currentUser}>\n    <div className=\"page\">\n      <Header />\n      <Main\n        onEditAvatar={handleEditAvatarClick}\n        onEditProfile={handleEditProfileClick}\n        onAddPlace={handleAddPlaceClick}\n        onCardClick={handleCardClick}\n        onCardLike={handleCardLike}\n        onCardDelete={handleCardDelete}\n        cards={cards}\n      />\n      <EditProfilePopup\n        isOpen={isEditProfilePopupOpen}\n        onClose={closeAllPopups}\n        onUpdateUser={handleUpdateUser}\n        submitBtnText={submitAddBtnText}\n        isSbmtBtnActiv={isSbmtBtnActiv}\n        handleChangeProfileName={handleChangeProfileName}\n        handleChangeProfileDescription={handleChangeProfileDescription}\n        isNameValid={isNameValid}\n        isDescriptionValid={isDescriptionValid}\n        validNameMessage={validNameMessage}\n        validDescriptionMessage={validDescriptionMessage}\n        />\n      <EditAvatarPopup\n        isOpen={isEditAvatarPopupOpen}\n        onClose={closeAllPopups}\n        onUpdateAvatar={handleUpdateAvatar}\n        submitBtnText={submitAddBtnText}\n        handleChangeAvatarInput={handleChangeAvatarInput}\n        isValid={isAvatarValid}\n        isSbmtBtnActiv={isSbmtBtnActiv}\n        validationMessage={validationMessage}\n        />\n      <AddPlacePopup\n        isOpen={isAddPlacePopupOpen}\n        onClose={closeAllPopups}\n        onAddPlace={handleAddPlace}\n        submitBtnText={submitCreateBtnText}\n        isSbmtBtnActiv={isSbmtBtnActiv}\n        handleChangePlace={handleChangePlace}\n        handleChangeUrl={handleChangeUrl}\n        isPlaceValid={isPlaceValid}\n        isUrlValid={isUrlValid}\n        validPlaceMessage={validPlaceMessage}\n        validUrlMessage={validUrlMessage}\n        />\n      <PopupWithForm\n        name=\"del\"\n        title=\"Вы уверены?\"\n        children=\"\"\n        btnText=\"Да\"\n        />\n      <ImagePopup\n        cardOpen={selectedCard}\n        onClose={closeAllPopups}\n        cardData={cardData}\n        />\n      <Footer />\n    </div>\n  </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/header__logo.c6f11019.svg\";"],"sourceRoot":""}